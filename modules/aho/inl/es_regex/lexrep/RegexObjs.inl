static const Char Regex0Str[] = {92, 91, 92, 100, 123, 49, 44, 50, 125, 92, 93, }; // "\[\d{1,2}\]"
static const Char Regex1Str[] = {91, 97, 45, 122, 237, 241, 93, 123, 51, 44, 125, 40, 97, 114, 108, 97, 115, 124, 97, 114, 108, 101, 115, 124, 97, 114, 108, 111, 115, 124, 97, 114, 110, 111, 115, 124, 101, 114, 108, 97, 115, 124, 101, 114, 108, 101, 115, 124, 101, 114, 108, 111, 115, 124, 105, 114, 108, 97, 115, 124, 105, 114, 108, 101, 115, 124, 105, 114, 108, 111, 115, 124, 105, 114, 110, 111, 115, 124, 97, 114, 108, 97, 124, 97, 114, 108, 101, 124, 97, 114, 108, 111, 124, 97, 114, 109, 101, 124, 97, 114, 115, 101, 124, 101, 114, 108, 97, 124, 101, 114, 108, 101, 124, 101, 114, 108, 111, 124, 101, 114, 109, 101, 124, 101, 114, 115, 101, 124, 105, 114, 108, 97, 124, 105, 114, 108, 101, 124, 105, 114, 108, 111, 124, 105, 114, 109, 101, 124, 105, 114, 115, 101, 41, }; // "[a-zíñ]{3,}(arlas|arles|arlos|arnos|erlas|erles|erlos|irlas|irles|irlos|irnos|arla|arle|arlo|arme|arse|erla|erle|erlo|erme|erse|irla|irle|irlo|irme|irse)"
static const Char Regex2Str[] = {91, 97, 45, 122, 237, 241, 93, 123, 50, 44, 125, 91, 94, 105, 93, 101, 114, 110, 111, 115, }; // "[a-zíñ]{2,}[^i]ernos"
static const Char Regex3Str[] = {91, 8804, 8805, 61, 92, 45, 92, 60, 92, 62, 92, 43, 92, 46, 93, 63, 92, 100, 43, 40, 91, 92, 46, 92, 44, 93, 92, 100, 43, 41, 63, 40, 91, 92, 44, 93, 92, 100, 43, 41, 63, }; // "[≤≥=\-\<\>\+\.]?\d+([\.\,]\d+)?([\,]\d+)?"
static const Char Regex4Str[] = {92, 46, 63, 92, 100, 92, 100, 92, 100, 92, 100, 92, 100, 43, }; // "\.?\d\d\d\d\d+"
static const Char Regex5Str[] = {92, 100, 123, 49, 44, 51, 125, 91, 92, 46, 93, 92, 100, 92, 100, 92, 100, }; // "\d{1,3}[\.]\d\d\d"
static const Char Regex6Str[] = {92, 100, 123, 49, 44, 51, 125, 91, 92, 46, 93, 92, 100, 123, 49, 44, 51, 125, 91, 92, 46, 93, 92, 100, 92, 100, 92, 100, }; // "\d{1,3}[\.]\d{1,3}[\.]\d\d\d"
static const Char Regex7Str[] = {40, 92, 45, 124, 41, 92, 100, 43, 40, 91, 92, 46, 92, 44, 93, 92, 100, 43, 41, 63, 40, 37, 124, 41, 63, 40, 92, 45, 92, 100, 43, 41, 63, 37, }; // "(\-|)\d+([\.\,]\d+)?(%|)?(\-\d+)?%"
static const Char Regex8Str[] = {91, 8804, 8805, 61, 92, 45, 92, 60, 92, 62, 92, 43, 93, 63, 92, 100, 43, 40, 91, 92, 46, 92, 44, 93, 92, 100, 43, 41, 63, 92, 45, 92, 100, 43, 40, 91, 92, 46, 92, 44, 93, 92, 100, 43, 41, 63, }; // "[≤≥=\-\<\>\+]?\d+([\.\,]\d+)?\-\d+([\.\,]\d+)?"
static const Char Regex9Str[] = {92, 100, 43, }; // "\d+"
static const Char Regex10Str[] = {92, 100, 123, 49, 44, 51, 125, }; // "\d{1,3}"
static const Char Regex11Str[] = {40, 105, 124, 118, 124, 120, 41, 123, 50, 44, 53, 125, 91, 92, 45, 93, 40, 105, 124, 118, 124, 120, 41, 123, 50, 44, 53, 125, }; // "(i|v|x){2,5}[\-](i|v|x){2,5}"
static const Char Regex12Str[] = {40, 105, 124, 118, 124, 120, 41, 123, 50, 44, 53, 125, }; // "(i|v|x){2,5}"
static const Char Regex13Str[] = {91, 48, 49, 50, 93, 63, 91, 48, 45, 57, 93, 91, 92, 58, 93, 91, 48, 45, 53, 93, 91, 48, 45, 57, 93, }; // "[012]?[0-9][\:][0-5][0-9]"
static const Char Regex14Str[] = {91, 97, 45, 122, 225, 233, 237, 243, 241, 93, 123, 51, 44, 125, 109, 111, 115, 108, 111, }; // "[a-záéíóñ]{3,}moslo"

